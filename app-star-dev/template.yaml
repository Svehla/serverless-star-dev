AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Example CRUD app for *dev (star-dev) meetup
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: nodejs8.10
    Environment:
      Variables:
        USER_TABLE_NAME: "app-test-star-dev-users"
  # Api:
  #   Cors: "'*'"

Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors: "'*'"

  StarDevGetUsers:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: starDevGetUsers/
      Handler: app.starDevGetUsers
      # ??? one role for each function?
      # Role: arn:aws:iam::787214262457:role/service-role/user-crud-dynamo
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
      Events:
        StarDevGetUsers:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users
            Method: get
  StarDevCreateUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: starDevCreateUser/
      Handler: app.starDevCreateUser
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
      Events:
        StarDevCreateUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users
            Method: post
  StarDevDeleteUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: starDevDeleteUser/
      Handler: app.starDevDeleteUser
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
      Events:
        StarDevDeleteUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users/{id}
            Method: delete
  StarDevUpdateUser:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: starDevUpdateUser/
      Handler: app.starDevUpdateUser
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref DynamoDBTable
      Events:
        StarDevUpdateUser:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /users/{id}
            Method: put

  # cloudformation db 
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: app-test-star-dev-users
      KeySchema: 
        -
          AttributeName: id
          KeyType: HASH
        # TODO: add created_at
        # -
        #   AttributeName: createdAt
        #   KeyType: RANGE
      AttributeDefinitions:
        -
          AttributeName: "id"
          AttributeType: "S"
        # TODO: add created_at
        # -
        #   AttributeName: "createdAt"
        #   AttributeType: "N"
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   HelloWorldApi:
#     Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: "Hello World Lambda Function ARN"
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt HelloWorldFunctionRole.Arn
